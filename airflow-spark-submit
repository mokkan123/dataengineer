from airflow import DAG
from airflow.providers.apache.spark.operators.spark_submit import SparkSubmitOperator
from datetime import datetime, timedelta

# Default arguments for the DAG
default_args = {
    "owner": "airflow",
    "depends_on_past": False,
    "email_on_failure": False,
    "email_on_retry": False,
    "retries": 1,
    "retry_delay": timedelta(minutes=5),
}

# Define the DAG
with DAG(
    dag_id="spark_submit_dag",
    default_args=default_args,
    description="Submit a Spark JAR file using Airflow",
    schedule_interval=timedelta(days=1),  # Adjust as needed
    start_date=datetime(2023, 1, 1),
    catchup=False,
) as dag:

    # Define the SparkSubmitOperator
    submit_spark_job = SparkSubmitOperator(
        task_id="submit_spark_job",
        application="/opt/projects/spark-examples_2.12-3.5.3.jar",  # Path to the JAR file
        conn_id="spark_default",  # Spark connection ID
        name="example_spark_job",  # Job name in Spark
        verbose=True,  # Enables verbose logging
        conf={
            "spark.executor.memory": "2g",
            "spark.executor.cores": "2",
            "spark.dynamicAllocation.enabled": "true",
            "spark.dynamicAllocation.minExecutors": "1",
            "spark.dynamicAllocation.maxExecutors": "5",
        },
        deploy_mode="cluster",  # Deploy mode
        application_args=[],  # Add application-specific arguments if needed
    )

    submit_spark_job
